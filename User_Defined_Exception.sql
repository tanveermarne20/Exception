--USER DEFINED EXCEPTION
SET SERVEROUTPUT ON
DECLARE
BANK_BALANCE NUMBER := 10000;
AMT NUMBER := &AMT;
LESS_AMOUNT EXCEPTION;
RSULT NUMBER;

BEGIN
 IF AMT > BANK_BALANCE THEN
RAISE LESS_AMOUNT ;
ELSE 
RSULT := BANK_BALANCE - AMT;
DBMS_OUTPUT.PUT_LINE(RSULT);
END IF ;

EXCEPTION 
WHEN LESS_AMOUNT THEN
DBMS_OUTPUT.PUT_LINE('INSUFFICIENT FUND');
END;
--===============================================================================
SET SERVEROUTPUT ON
DECLARE
 BANK_BALANCE NUMBER:=10000;
 AMT NUMBER:=&AMT;
 LESS_AMOUNT EXCEPTION;
 RSLT NUMBER;
 
BEGIN
IF AMT>BANK_BALANCE THEN
 RAISE LESS_AMOUNT;
 ELSE
 RSLT:=BANK_BALANCE-AMT;
 DBMS_OUTPUT.PUT_LINE(RSLT);
 END IF;
 EXCEPTION
 WHEN LESS_AMOUNT THEN
 DBMS_OUTPUT.PUT_LINE('INSUFFICIENT FUNDS');
END;

-------------------------------------------------------------------
SET SERVEROUTPUT ON
DECLARE
   BANK_BALANCE NUMBER := 10000;
   AMT NUMBER := &AMT;
   INSUFFICIENT_FUNDS EXCEPTION;
   INVALID_AMOUNT EXCEPTION;
   NEGATIVE_AMOUNT EXCEPTION;
   RSLT NUMBER;
BEGIN
   IF AMT < 0 THEN
      RAISE NEGATIVE_AMOUNT;
   ELSIF AMT > BANK_BALANCE THEN
      RAISE INSUFFICIENT_FUNDS;
   ELSIF AMT = 0 THEN
      RAISE INVALID_AMOUNT;
   ELSE
      RSLT := BANK_BALANCE - AMT;
      DBMS_OUTPUT.PUT_LINE('New Balance: ' || RSLT);
   END IF;
EXCEPTION
   WHEN INSUFFICIENT_FUNDS THEN
      DBMS_OUTPUT.PUT_LINE('INSUFFICIENT FUNDS');
   WHEN INVALID_AMOUNT THEN
      DBMS_OUTPUT.PUT_LINE('INVALID AMOUNT: Zero amount is not allowed');
   WHEN NEGATIVE_AMOUNT THEN
      DBMS_OUTPUT.PUT_LINE('INVALID AMOUNT: Negative amount is not allowed');
END;


--================================================================
--with procedure
SET SERVEROUTPUT ON
CREATE OR REPLACE PROCEDURE ATM_MACHINE_EXCEPTION(AMT NUMBER) IS
   BANK_BALANCE NUMBER := 10000;
   AMT NUMBER;
   INSUFFICIENT_FUNDS EXCEPTION;
   INVALID_AMOUNT EXCEPTION;
   NEGATIVE_AMOUNT EXCEPTION;
   RSLT NUMBER;
BEGIN
   IF AMT < 0 THEN
      RAISE NEGATIVE_AMOUNT;
   ELSIF AMT > BANK_BALANCE THEN
      RAISE INSUFFICIENT_FUNDS;
   ELSIF AMT = 0 THEN
      RAISE INVALID_AMOUNT;
   ELSE
      RSLT := BANK_BALANCE - AMT;
      DBMS_OUTPUT.PUT_LINE('New Balance: ' || RSLT);
   END IF;
EXCEPTION
   WHEN INSUFFICIENT_FUNDS THEN
      DBMS_OUTPUT.PUT_LINE('INSUFFICIENT FUNDS');
   WHEN INVALID_AMOUNT THEN
      DBMS_OUTPUT.PUT_LINE('INVALID AMOUNT: Zero amount is not allowed');
   WHEN NEGATIVE_AMOUNT THEN
      DBMS_OUTPUT.PUT_LINE('INVALID AMOUNT: Negative amount is not allowed');
END;




--=========================15march=================================================
SET SERVEROUTPUT ON
DECLARE
 BANK_BALANCE NUMBER:=10000;
 AMT NUMBER:=&AMT;
 INSUFFICIENT_BAL EXCEPTION;
 ZERO_INPUT EXCEPTION;
 RSLT NUMBER;
 NEGATIVE_VAL EXCEPTION;
BEGIN
 IF AMT>BANK_BALANCE THEN
   RAISE INSUFFICIENT_BAL;
   
ELSIF AMT=0 THEN
 RAISE ZERO_INPUT; 
 
 ELSIF AMT<0 THEN
 RAISE NEGATIVE_VAL;
  ELSE
     RSLT:=BANK_BALANCE-AMT;
   DBMS_OUTPUT.PUT_LINE(RSLT);
END IF;
 EXCEPTION
     WHEN INSUFFICIENT_BAL THEN 
     DBMS_OUTPUT.PUT_LINE('INSIFFICIENT BALANCE');
     
     WHEN ZERO_INPUT THEN
     DBMS_OUTPUT.PUT_LINE('YOU HAVE ENTERED ZERO');
     
     WHEN NEGATIVE_VAL THEN
     DBMS_OUTPUT.PUT_LINE('YOU HAVE ENTERED NEGATIVE AMOUNT');
END;



--=================================================================
SET SERVEROUTPUT ON
DECLARE
BANK_BALANCE NUMBER:=15000;
AMT NUMBER:=&AMT;
INSIFFICIENT EXCEPTION;
ZERO_AMOUNT EXCEPTION;
NEGATIVE_AMOUNT EXCEPTION;
RSLT NUMBER;
BEGIN
 IF AMT>BANK_BALANCE THEN 
    RAISE INSIFFICIENT;
       ELSIF AMT=0 THEN
       RAISE ZERO_AMOUNT;
       ELSIF AMT<0 THEN
       RAISE NEGATIVE_AMOUNT;
 ELSE RSLT:=BANK_BALANCE-AMT;
 DBMS_OUTPUT.PUT_LINE(RSLT);
 
  END IF;
EXCEPTION
   WHEN INSIFFICIENT THEN
    DBMS_OUTPUT.PUT_LINE('Insufficient funds');
   WHEN  ZERO_AMOUNT THEN
    DBMS_OUTPUT.PUT_LINE('You entered zero');
   WHEN NEGATIVE_AMOUNT THEN
   DBMS_OUTPUT.PUT_LINE('You entered negative amount');
END;








